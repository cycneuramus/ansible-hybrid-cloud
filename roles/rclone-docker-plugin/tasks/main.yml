- name: Install dependencies
  become: true
  package:
    name:
      - fuse3
      - unzip
    state: present

- name: Set allow_other in fuse.conf
  become: true
  lineinfile:
    path: /etc/fuse.conf
    regexp: ^#\s*user_allow_other
    line: user_allow_other

- name: Check for rclone binary
  stat:
    path: /usr/bin/rclone
  register: rclone_bin

- name: Install rclone
  when: not rclone_bin.stat.exists
  block:
    - name: Check latest stable rclone version number
      uri:
        url: https://downloads.rclone.org/version.txt
        return_content: true
      register: rclone_latest_version

    - name: Set rclone version fact
      set_fact:
        rclone_version: "{{ rclone_latest_version.content | replace('rclone v', '', 1) | trim }}"

    - name: Get rclone stable version
      unarchive:
        src: https://downloads.rclone.org/v{{ rclone_version }}/rclone-v{{ rclone_version }}-linux-{{ arch }}.zip
        dest: /tmp
        remote_src: true
        creates: "/tmp/rclone-v{{ rclone_version }}-linux-{{ arch }}"

    - name: Copy rclone binary
      become: true
      copy:
        src: "/tmp/rclone-v{{ rclone_version }}-linux-{{ arch }}/rclone"
        dest: "/usr/bin/rclone"
        mode: "0755"
        owner: root
        group: root
        remote_src: true

- name: Ensure rclone plugin default directories
  become: true
  file:
    path: "{{ item }}"
    owner: root
    group: root
    state: directory
    mode: "0755"
  with_items:
    - /var/lib/docker-plugins/rclone/config
    - /var/lib/docker-plugins/rclone/cache

- name: Ensure wanted directories
  file:
    path: "{{ item }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: "0755"
  with_items:
    - "{{ lookup('env', 'HOME') + '/.config/rclone' }}"
    - "{{ lookup('env', 'HOME') + '/.cache/rclone/docker' }}"

# - name: Check if rclone config exists
#   stat:
#     path: "{{ lookup('env', 'HOME') }}/.config/rclone/rclone.conf"
#   register: rclone_config

# - name: Deploy rclone config
#   when: rclone_config.stat.exists
#   become: true
#   block:
#     - name: Clear out previous config
#       file:
#         path: /var/lib/docker-plugins/rclone/config/rclone.conf
#         state: absent
#
#     - name: Copy over rclone config
#       copy:
#         src: "{{ lookup('env', 'HOME') }}/.config/rclone/rclone.conf"
#         dest: /var/lib/docker-plugins/rclone/config/rclone.conf
#         owner: root
#         group: root
#         mode: 0644

- name: Clear out previous plugin
  community.docker.docker_plugin:
    plugin_name: rclone/docker-volume-rclone:{{ arch }}
    alias: rclone
    state: absent
    force_remove: true
  become: true

- name: Install rclone docker volume plugin
  become: true
  community.docker.docker_plugin:
    plugin_name: rclone/docker-volume-rclone:{{ arch }}
    alias: rclone
    state: present
    plugin_options:
      config: "{{ lookup('env', 'HOME') + '/.config/rclone' }}"
      cache: "{{ lookup('env', 'HOME') + '/.cache/rclone/docker' }}"
      args: "--allow-other --vfs-cache-mode=full --vfs-cache-max-size=5G"

- name: Enable plugin
  community.docker.docker_plugin:
    plugin_name: rclone/docker-volume-rclone:{{ arch }}
    alias: rclone
    state: enable
