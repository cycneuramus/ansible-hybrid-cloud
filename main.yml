# Initial provisioning with ssh password:
# ansible-playbook main.yml --tags="user" -e "ansible_user=root" --ask-pass

- name: Provision servers
  hosts: all
  roles:
    - role: user-create
      when: ansible_user != new_user
      tags: user

    - role: user-supersede
      when: ansible_user != new_user
      tags: user

    - role: debloat
      become: true
      tags: debloat

    - role: hostname
      become: true
      tags: hostname

    - role: ssh
      become: true
      tags:
        - ssh
        - security

    - role: unattended-upgrades
      become: true
      tags:
        - unattended-upgrades
        - security

    - role: motd
      become: true
      tags: motd

    - role: apt
      become: true
      tags: apt

    - role: neovim
      become: true
      tags: neovim

    - role: docker
      become: true
      tags: docker

    - role: dirs
      tags: dirs

    - role: dotfiles
      tags: dotfiles

    - role: rclone-install
      tags: rclone-install

    - role: rclone-docker-plugin
      when:
        - rclone_mode == "plugin"
        - storage != "glusterfs"
      tags: rclone-docker-plugin

    - role: firewall
      become: true
      when:
        - cluster_labels["datacenter"] != "eso"
      tags:
        - firewall
        - security

    - role: fail2ban
      become: true
      when:
        - protection == "fail2ban"
        - cluster_labels["ingress"] == "true"
      tags:
        - fail2ban
        - security

    - role: crowdsec
      become: true
      when:
        - protection == "crowdsec"
        - cluster_labels["datacenter"] != "eso"
        - cluster_labels["ingress"] == "true"
      tags:
        - crowdsec
        - security

    - role: wireguard
      become: true
      tags:
        - wireguard
        - cluster

    - role: syncthing
      become: true
      when:
        - storage == "syncthing"
      tags:
        - syncthing
        - cluster

    - role: glusterfs
      become: true
      when: storage == "glusterfs"
      tags:
        - glusterfs
        - cluster

    - role: mounts
      tags: mounts

    - role: swarm
      when: orchestrator == "swarm"
      tags:
        - swarm
        - cluster

    - role: nomad
      become: true
      when: orchestrator == "nomad"
      tags:
        - nomad
        - cluster
